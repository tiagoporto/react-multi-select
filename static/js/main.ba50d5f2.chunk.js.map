{"version":3,"sources":["Select.tsx","App.tsx","reportWebVitals.ts","index.tsx","Select.module.scss","App.module.scss"],"names":["Select","initialEmails","useRef","useState","emails","setEmails","handleClick","console","log","useEffect","fetch","then","response","json","data","current","className","style","fakeInput","tag","removeButton","onClick","tagError","type","onChange","event","filter","target","value","email","includes","placeholder","input","name","id","map","index","App","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4OAGaA,EAAS,WACpB,IAAIC,EAAgBC,iBAAiB,IADX,EAEEC,mBAAmB,IAFrB,mBAEnBC,EAFmB,KAEXC,EAFW,KAqBpBC,EAAc,WAClBC,QAAQC,IAAI,cAOd,OAJAC,qBAAU,WApBRC,MAAM,mEACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLT,EAAUS,GACVb,EAAcc,QAAUD,OAkB3B,IAGD,qCACE,sBAAKE,UAAWC,IAAMC,UAAtB,UACE,sBAAKF,UAAWC,IAAME,IAAtB,4BAEE,wBAAQH,UAAWC,IAAMG,aAAcC,QAASf,EAAhD,kBAKF,sBAAKU,UAAS,UAAKC,IAAME,IAAX,YAAkBF,IAAMK,UAAtC,4BAEE,wBAAQN,UAAWC,IAAMG,aAAcC,QAASf,EAAhD,kBAKF,uBACEiB,KAAK,OACLC,SA/Ba,SAACC,GAJD,IAACC,IAKPD,EAAME,OAAOC,MAJ1BvB,EAAUJ,EAAcc,QAAQW,QAAO,SAACG,GAAD,OAAWA,EAAMC,SAASJ,QAmC3DK,YAAY,iBACZf,UAAWC,IAAMe,WAGrB,wBAAQC,KAAK,SAASC,GAAG,SAAzB,SACG9B,EAAO+B,KAAI,SAACN,EAAOO,GAClB,OACE,wBAAQR,MAAOC,EAAf,SACGA,GADwBO,YC7CxBC,MAVf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,sBAAMA,UAAWC,IAAMqB,KAAvB,SACE,cAAC,EAAD,SCMOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K,kBCfAY,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,IAAM,oBAAoB,aAAe,6BAA6B,SAAW,2B,kBCAvKD,EAAOC,QAAU,CAAC,KAAO,qB","file":"static/js/main.ba50d5f2.chunk.js","sourcesContent":["import style from \"./Select.module.scss\";\nimport React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\n\nexport const Select = () => {\n  let initialEmails = useRef<string[]>([]);\n  const [emails, setEmails] = useState<string[]>([]);\n\n  const getEmails = () => {\n    fetch(\"https://tiagoporto.github.io/react-multi-select/email-list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setEmails(data);\n        initialEmails.current = data;\n      });\n  };\n\n  const filterEmails = (filter: string) => {\n    setEmails(initialEmails.current.filter((email) => email.includes(filter)));\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    filterEmails(event.target.value);\n  };\n\n  const handleClick = () => {\n    console.log(\"clicked!!\");\n  };\n\n  useEffect(() => {\n    getEmails();\n  }, []);\n\n  return (\n    <>\n      <div className={style.fakeInput}>\n        <div className={style.tag}>\n          tiago@gmail.com\n          <button className={style.removeButton} onClick={handleClick}>\n            X\n          </button>\n        </div>\n\n        <div className={`${style.tag} ${style.tagError}`}>\n          tiago@gmail.com\n          <button className={style.removeButton} onClick={handleClick}>\n            X\n          </button>\n        </div>\n\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"Enter email...\"\n          className={style.input}\n        />\n      </div>\n      <select name=\"emails\" id=\"emails\">\n        {emails.map((email, index) => {\n          return (\n            <option value={email} key={index}>\n              {email}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n","import React from \"react\";\nimport style from \"./App.module.scss\";\nimport { Select } from \"./Select\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className={style.main}>\n        <Select />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fakeInput\":\"Select_fakeInput__3V_E3\",\"input\":\"Select_input__2oSND\",\"tag\":\"Select_tag__3cBuI\",\"removeButton\":\"Select_removeButton__1e7ex\",\"tagError\":\"Select_tagError__cF0EK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__uN9ca\"};"],"sourceRoot":""}